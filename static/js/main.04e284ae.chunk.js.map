{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","utils/fetchImgSearchItem.js","components/loader/Loader.js","components/searchbar/Searchbar.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js"],"names":["ImageGalleryItem","images","onClick","map","image","className","src","webformatURL","alt","data-source","largeImageURL","id","ImageGallery","searchQuery","page","axios","get","then","response","data","hits","Loading","title","type","color","height","width","Searchbar","state","inputValue","handelChange","e","setState","target","value","handelSubmit","preventDefault","props","onSubmit","this","autocomplete","autofocus","placeholder","onChange","Component","Button","Modal","children","App","loader","error","searchItem","largeImage","setLargeImg","url","dataset","source","console","log","fetchQuery","loading","fetchImgSearchItem","prevState","catch","finally","handelSearchQuery","query","prevProps","window","scrollTo","top","document","documentElement","scrollHeight","behavior","addEventListener","code","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.04e284ae.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({images, onClick}) => {\r\n    return (\r\n        <>\r\n        { \r\n            images.map(image => \r\n             (\r\n         <li className=\"ImageGalleryItem\" key={image.id}>\r\n       <img src={image.webformatURL} alt=\"\"  className=\"ImageGalleryItem-image\" data-source={image.largeImageURL} onClick={onClick}></img> \r\n     </li>\r\n     )) }\r\n     </>\r\n     )\r\n}\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\nexport default ImageGalleryItem;\r\n","\r\nimport React from 'react'\r\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({images, onClick}) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n  <ImageGalleryItem images={images} onClick={onClick}/>\r\n</ul>\r\n    )\r\n}\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n  }\r\nexport default ImageGallery\r\n","import axios from 'axios';\r\n\r\nconst fetchImgSearchItem = (searchQuery, page=1) => {\r\n  return axios\r\n  .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=19520761-48ad5b9d4b9d0975ec43def51&image_type=photo&orientation=horizontal&per_page=12`)\r\n  .then(response => response.data.hits)\r\n  \r\n};\r\n\r\nexport default {fetchImgSearchItem, };","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Loading = ({}) => {\r\n    return (\r\n        <div className=\"col spinner_item p-5\" title=\"Bars\">\r\n              <Loader type=\"Bars\" \r\n              color=\" #3f51b5\" \r\n              height={50} \r\n              width={50} />\r\n            </div>\r\n     )\r\n}\r\n\r\nexport default Loading;","import React, {Component} from 'react'\r\n\r\nexport default class Searchbar extends Component {\r\n   state = {inputValue : ''}\r\n\r\n   handelChange = (e) => {\r\n    this.setState({inputValue: e.target.value})\r\n   }\r\n   handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue:'' })\r\n   }\r\n\r\n   render () {\r\n    return (\r\n        <header className=\"Searchbar\">\r\n  <form className=\"SearchForm\" onSubmit={this.handelSubmit}>\r\n    <button type=\"submit\" className=\"SearchForm-button\">\r\n      <span className=\"SearchForm-button-label\">Search</span>\r\n    </button>\r\n\r\n    <input\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      autocomplete=\"off\"\r\n      autofocus\r\n      placeholder=\"Search images and photos\"\r\n      onChange={this.handelChange}\r\n    />\r\n  </form>\r\n</header>\r\n    )\r\n}\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({onClick}) => {\r\n    return (\r\n        <button className='Button' type= 'button' onClick={onClick}>\r\n            Load More\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};","import React, {Component} from 'react'\r\n\r\nexport default class Modal extends Component { \r\n    render (){\r\n    return (\r\n    <div className=\"Overlay\">\r\n     <div className=\"Modal\">\r\n       {this.props.children}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\n \r\n","import axios from 'axios'\nimport React, { Component } from 'react'\nimport ImageGalleryItem from './imageGalleryItem/ImageGalleryItem'\nimport ImageGallery from './imageGallery/ImageGallery'\nimport fetchImgSearchItem from '../utils/fetchImgSearchItem'\nimport Loading from './loader/Loader'\nimport Searchbar from './searchbar/Searchbar'\nimport Button from './button/Button'\nimport Modal from './modal/Modal'\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    loader: false,\n    error: null,\n    page: 1,\n    searchItem:'',\n    largeImage: null,\n  } \n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchItem !== this.state.searchItem)\n    {\n      this.fetchQuery(this.state.searchItem)\n    }\n    if (prevState.searchItem === this.state.searchItem)\n    {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  componentDidMount() {\n    window.addEventListener('keydown', e => {\n        if (e.code === 'Escape') \n        {\n          this.setState({largeImage: null})\n        }\n    })\n }\n  setLargeImg = (e) => {\n    const url = e.target.dataset.source;\n    this.setState({largeImage: url})\n    console.log(url);\n   \n  }\n\n  fetchQuery = () => {\n  const {searchItem, page} = this.state;\n\n  this.setState({loading: true});\n\n  fetchImgSearchItem.fetchImgSearchItem(searchItem, page)\n  .then(images => this.setState(prevState => ({images: [...prevState.images, ...images], \n    page: (prevState.page + 1)})))\n  .catch ((error) => this.setState({error}))\n  .finally(() => this.setState({loading: false}))\n  }\n\n  handelSearchQuery = (query) => {\n    this.setState({searchItem: query, page: 1,  images: []})\n  }\n\n\n\n  render() {\n    const {error, loading, images, largeImage} = this.state;\n    return (\n      <>\n       {error &&  <Modal><p>Something went wrong</p></Modal>}\n    <Searchbar onSubmit={this.handelSearchQuery}/>\n     {loading && <Loading />}\n    \n     {images.length > 0 && <ImageGallery images={images} onClick={this.setLargeImg}/>}\n     \n     {images.length > 0 && !loading && <Button onClick={this.fetchQuery} />}\n\n     {this.state.largeImage && <Modal><img src={largeImage} alt=\"\" ></img></Modal>  }\n      </>\n    )\n    \n}\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}